{"version":3,"sources":["components/Cart/Cart.module.css","components/Registration/Registration.module.css","components/Popover/Popover.module.css","components/Login/Login.module.css","components/PopoverForUser/PopoverForUser.module.css","components/Card/Card.module.css","components/History/History.module.css","redux/slices/mainSlices.js","components/Login/Login.jsx","components/Currency/Currency.jsx","components/Popover/Popover.jsx","components/PopoverForUser/PopoverForUser.jsx","components/Nav/Nav.jsx","components/Header/Header.jsx","components/Card/Card.jsx","img/cheese.jpg","img/bbq.jpg","img/double-pepperoni.jpg","img/hawaiian.jpg","img/margherita.jpeg","img/meat-fest.jpg","img/mexican.jpg","img/vegan-veggie.jpeg","components/Main/Main.jsx","redux/rootReducer.js","redux/store.js","components/Registration/Registration.jsx","components/Checkout/Checkout.jsx","components/Cart/Cart.jsx","components/History/History.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","storageState","window","localStorage","getItem","initialState","JSON","parse","main","currency","cart","items","totalQuantity","totalSum","isLogined","userName","userId","succesOrder","delivery","history","existHistory","mainSlice","createSlice","name","reducers","setCurrency","state","action","payload","addItemToCart","priceUSD","priceEUR","id","img","quantity","decreaseItemQuantity","setTotalQuantity","setTotalSumOfOrder","setUserName","succesOrderDone","clearCart","setUserId","addHistory","removeItemFromCart","actions","mainReducer","reducer","Login","dispatch","useDispatch","useHistory","useState","inputState","setInputState","useEffect","a","email","password","fetch","method","headers","body","stringify","response","json","result","answer","push","to","autoComplete","onSubmit","e","preventDefault","target","value","className","style","input","type","placeholder","required","minLength","minlength","submit","Currency","currencyState","useSelector","valueCurrency","setValue","onChange","select","useStyles","makeStyles","theme","typography","padding","spacing","SimplePopover","setTotalSum","orderList","arrOfOrderList","Object","values","totalCountOfPizza","reduce","acc","item","toFixed","classes","anchorEl","setAnchorEl","open","undefined","Button","marginTop","backgroundColor","fontWeight","fontSize","aria-describedby","variant","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","map","index","maxWidth","maxHeight","src","alt","changeItem","decreaseQuantity","inputValue","increaseQuantity","length","linkToCart","createStyles","PopoverForUser","userNameState","styles","wrapper","link","Nav","showCartList","ul","Header","header","Card","props","card","width","margin","border","title","description","buttonOrder","Main","isLoginedState","data","logoCheese","logoBBQ","double","hawaiian","margo","meat_fest","mexican","vegan_veggie","rootReducer","combineReducers","store","configureStore","subscribe","getState","setItem","Registration","Math","random","form","pattern","FormDialog","React","setOpen","orderInCart","succesOrderState","street","house","apartment","comment","date","Date","user_id","order","handleClose","textContent","handleChange","background","color","marginBottom","marginRight","Dialog","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","label","fullWidth","DialogActions","Cart","totatWithDelivery","itemInCart","delete","removeFromCart","choosePizza","History","isExistHistory","historyListOfOrder","keys","el","i","each","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1296dc98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"changeItem\":\"Cart_changeItem__3Ag_n\",\"inputValue\":\"Cart_inputValue__1v8y2\",\"choosePizza\":\"Cart_choosePizza__3yvXf\",\"delete\":\"Cart_delete__3cC6P\",\"itemInCart\":\"Cart_itemInCart__2jQ03\",\"wrapper\":\"Cart_wrapper__1VLtQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"Registration_submit__3qStz\",\"input\":\"Registration_input__KDTU_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkToCart\":\"Popover_linkToCart__1dBWe\",\"changeItem\":\"Popover_changeItem__19q90\",\"inputValue\":\"Popover_inputValue__1hE2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"Login_submit__2USvp\",\"input\":\"Login_input__1zhXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"PopoverForUser_link__3zzQI\",\"wrapper\":\"PopoverForUser_wrapper__1Qtwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Card_title__2pVhP\",\"buttonOrder\":\"Card_buttonOrder__2Xgcb\",\"description\":\"Card_description__1mDTa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"choosePizza\":\"History_choosePizza__EeAwE\",\"wrapper\":\"History_wrapper__3Q0_c\",\"item\":\"History_item__2TNs7\",\"each\":\"History_each__pROrL\"};","import { createSlice } from '@reduxjs/toolkit';\n\nconst defaultState = {\n    currency: 'usd',\n    cart: { \n      items: { },\n      totalQuantity: 0,\n      totalSum: 0,\n    },\n    isLogined: null,\n    userName: \"\",\n    userId: \"\",\n    succesOrder: false,\n    delivery: 3,\n    history: [],\n    existHistory: false,\n};\n\nconst storageState = window.localStorage.getItem('state');\nconst initialState = storageState? JSON.parse(storageState).main : defaultState;\n\nconst mainSlice = createSlice({\n  name: 'main',\n  initialState, \n  reducers: {\n    setCurrency(state,action) {\n      state.currency = action.payload;\n    },\n    addItemToCart(state,action) {\n      const {name, priceUSD, priceEUR, id, img } = action.payload;\n        if(state.cart.items[id]) {\n          state.cart.items[id].quantity++;\n        } else {\n          state.cart.items[id] = {\n            name,\n            priceUSD,\n            priceEUR,\n            id,\n            quantity: 1,\n            img\n          }\n        }\n    },\n    decreaseItemQuantity(state,action) {\n      const {name, priceUSD, priceEUR, id, img } = action.payload;\n        if(state.cart.items[id]) {\n          state.cart.items[id].quantity--;\n        }\n    },\n    isLogined(state,action) {\n      state.isLogined = action.payload;\n    },\n    setTotalQuantity(state,action) {\n      state.cart.totalQuantity = action.payload;\n    },\n    setTotalSumOfOrder(state,action) {\n      state.cart.totalSum = action.payload;\n    },\n    setUserName(state,action) {\n      state.userName = action.payload;\n    },\n    succesOrderDone(state,action) {\n      state.succesOrder = action.payload;\n    },\n    clearCart(state, action) {\n      state.cart.items = action.payload; \n    },\n    setUserId(state,action) {\n      state.userId = action.payload;\n    },\n    existHistory(state,action) {\n      state.existHistory = action.payload;\n    },\n    addHistory(state,action) {\n      state.history = action.payload;\n    },\n    removeItemFromCart(state, action) {\n      const {name, priceUSD, priceEUR, id, img } = action.payload;\n      // state.delivery = id;\n      delete state.cart.items[id];\n    }\n  }\n})\n\nexport const { setCurrency, addItemToCart, isLogined, setTotalQuantity, setTotalSumOfOrder, setUserName, succesOrderDone, clearCart, decreaseItemQuantity, setUserId, existHistory, addHistory, removeItemFromCart } = mainSlice.actions;\nexport const mainReducer = mainSlice.reducer;\n","import React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, \n  useHistory\n} from \"react-router-dom\";\nimport { isLogined, setUserName, setUserId } from '../../redux/slices/mainSlices';\nimport style from './Login.module.css';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [inputState, setInputState] = useState({});\n\n  useEffect(() => {\n    (async() => {\n      const {email,  password} = inputState;\n      if(inputState !== {}) {\n        const response =  await fetch('/signIn', {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            email,\n            password,\n          }),\n        });\n        const result = await response.json();  \n        if(result.answer !== 'no') {\n          dispatch(setUserName(result.name));\n          dispatch(setUserId(result.id))\n          dispatch(isLogined(true))\n          history.push('/');\n        } \n      }\n   })();\n  },[inputState])\n\n  function signInUser(e) {\n    e.preventDefault();\n    const { email: { value: email } } = e.target;\n    const { password: { value: password } } = e.target;\n    setInputState({email, password});\n  }\n  return (\n    <>\n        <header>\n          <Link to=\"/\">\n              <p> Go to Main </p>\n          </Link>\n        </header>\n        <div>\n        <h3>Please, sign in</h3>\n        <form autoComplete=\"off\" onSubmit={signInUser}>\n          <span>Email</span>\n          <input className={style.input} name=\"email\" type=\"text\" placeholder=\"email\" required minLength=\"2\" />\n          <span>Password</span>\n          <input className={style.input} type=\"password\" name=\"password\" placeholder=\"password\" required minlength=\"6\"/>\n          <button className={style.submit}>Submit</button>\n        </form>\n      </div>\n  </>\n  )\n}\n","import React, {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport style from './Currency.module.css';\nimport { setCurrency } from '../../redux/slices/mainSlices';\n\nexport default function Currency() {\n  const currencyState = useSelector((state => state.main.currency));\n  const [valueCurrency, setValue] = useState(currencyState);\n  const dispatch = useDispatch();\n  \n  function choiceCurrency() {\n    if(currencyState !== \"eur\") {\n      setValue('eur')\n      dispatch(setCurrency(\"eur\"))\n    } else {\n      setValue('usd')\n      dispatch(setCurrency(\"usd\"))\n    }\n  }\n\n  return (\n    <>\n    <select onChange={choiceCurrency} value={valueCurrency} style={style.select} >\n      <option value=\"usd\" name=\"dollar\">USD</option>\n      <option value=\"eur\" name=\"euro\">EUR</option>\n    </select>\n    </>\n  )\n}\n","import React, { useState, useEffect } from  'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addItemToCart, succesOrderDone, decreaseItemQuantity } from '../../redux/slices/mainSlices';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, BrowserRouter,\n  useHistory\n} from \"react-router-dom\";\nimport { setTotalQuantity, setTotalSumOfOrder } from '../../redux/slices/mainSlices';\nimport style from './Popover.module.css';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function SimplePopover() {\n  const [totalSum, setTotalSum] = useState(0);\n    const dispatch = useDispatch();\n    const currencyState = useSelector((state => state.main.currency));\n    const orderList =  useSelector((state => state.main.cart.items));\n    const arrOfOrderList = Object.values(orderList);\n  \n    const totalCountOfPizza = arrOfOrderList.reduce((acc, item) => {\n      acc = acc + item.quantity;\n      return  acc;\n    },0)\n  \n    useEffect(() => {\n      const totalSum = arrOfOrderList.reduce((acc, item) => {\n        if(currencyState === \"usd\") {\n          acc = acc + (item.quantity * item.priceUSD);\n        } else {\n          acc = acc + (item.quantity * item.priceEUR);\n        }\n        return  acc;\n      },0);\n      setTotalSum(totalSum.toFixed(1));\n      dispatch(setTotalQuantity(totalCountOfPizza));\n      dispatch(setTotalSumOfOrder(totalSum.toFixed(2)))\n    }, [totalCountOfPizza,currencyState])\n    \n\n    const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(!anchorEl);\n  };\n\n  const open = (anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  function increaseQuantity( item) {\n    dispatch(addItemToCart(item))\n\n  }\n\n  function decreaseQuantity(item) {\n    if(item.quantity !== 0 ) {\n      dispatch(decreaseItemQuantity(item))\n    }\n  }\n\n  return (\n    <div>\n      <Button style={{ marginTop: \"40%\", backgroundColor: \"#edeef1\", fontWeight: \"bold\", fontSize: \"14px\" }}  aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n       Cart {totalCountOfPizza && totalCountOfPizza > 0? totalCountOfPizza : \"\" }\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>\n        { anchorEl ? <div> \n          <div> { arrOfOrderList && arrOfOrderList.map((item,index) => {\n          return (\n          <p className=\"itemInCart\" key={index}>\n            <h5> {item.name} </h5>\n            { currencyState === \"usd\" ? \n              <span>$ {item.priceUSD}</span>  : <span>€ {item.priceEUR} </span> \n            }\n            <img style={{ maxWidth: \"50px\", maxHeight: \"50px\"  }} src={item.img} alt=\"img\"/>\n            <button className={ style.changeItem } onClick={() => decreaseQuantity(item)}>-</button>\n            <input className={ style.inputValue } type=\"text\" value={item.quantity}/>\n            <button className={ style.changeItem } onClick={()=> increaseQuantity(item) }>+</button>\n          </p>\n          )\n        }) }\n         </div>\n        </div> : \"\" }\n        { arrOfOrderList.length === 0 ? <p style={{fontWeight:\"bold\", fontSize:\"1.3rem\"}}> \"Sorry, your cart is empty\" </p>  : <Link className={style.linkToCart} to=\"/cart\">Go to Cart</Link> }\n        </Typography>\n      </Popover>\n    </div>\n  );\n}\n\n\n// import { useDispatch, useSelector } from 'react-redux';\n// import { addItemToCart, succesOrderDone, decreaseItemQuantity } from '../../redux/slices/mainSlices';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link, BrowserRouter,\n//   useHistory\n// } from \"react-router-dom\";\n// import style from './Popover.module.css';\n\n// import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n// import Popover from '@material-ui/core/Popover';\n// import Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import { setTotalQuantity, setTotalSumOfOrder } from '../../redux/slices/mainSlices';\n\n\n// const useStyles = makeStyles((theme) =>\n//   createStyles({\n//     typography: {\n//       padding: theme.spacing(2),\n//     },\n//   }),\n// );\n\n// export default function PopoverForUser() {\n//   const [totalSum, setTotalSum] = useState(0);\n//   const dispatch = useDispatch();\n//   const currencyState = useSelector((state => state.main.currency));\n//   const orderList =  useSelector((state => state.main.cart.items));\n//   const arrOfOrderList = Object.values(orderList);\n\n//   const totalCountOfPizza = arrOfOrderList.reduce((acc, item) => {\n//     acc = acc + item.quantity;\n//     return  acc;\n//   },0)\n\n//   useEffect(() => {\n//     const totalSum = arrOfOrderList.reduce((acc, item) => {\n//       if(currencyState === \"usd\") {\n//         acc = acc + (item.quantity * item.priceUSD);\n//       } else {\n//         acc = acc + (item.quantity * item.priceEUR);\n//       }\n//       return  acc;\n//     },0);\n//     setTotalSum(totalSum.toFixed(1));\n//     dispatch(setTotalQuantity(totalCountOfPizza));\n//     dispatch(setTotalSumOfOrder(totalSum.toFixed(2)))\n//   }, [totalCountOfPizza,currencyState])\n  \n//   const classes = useStyles();\n//   const [anchorEl, setAnchorEl] = useState(null);\n\n//   const handleClick = (event) => {\n//     setAnchorEl(event.currentTarget);\n//   };\n\n//   const handleClose = () => {\n//     setAnchorEl(!anchorEl);\n//   };\n\n//   const open = (anchorEl);\n//   const id = open ? 'simple-popover' : undefined;\n\n//   function increaseQuantity( item) {\n//     dispatch(addItemToCart(item))\n\n//   }\n\n//   function decreaseQuantity(item) {\n//     if(item.quantity !== 0 ) {\n//       dispatch(decreaseItemQuantity(item))\n//     }\n//   }\n\n//   return (\n//     <div>\n//       <Button style={{ marginTop: \"40%\", backgroundColor: \"#edeef1\", fontWeight: \"bold\", fontSize: \"14px\" }}  aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n//        Cart {totalCountOfPizza && totalCountOfPizza > 0? totalCountOfPizza : \"\" }\n//       </Button>\n//       <Popover\n//         id={id}\n//         open={open}\n//         anchorEl={anchorEl}\n//         onClose={handleClose}\n//         anchorOrigin={{\n//           vertical: 'bottom',\n//           horizontal: 'center',\n//         }}\n//         transformOrigin={{\n//           vertical: 'top',\n//           horizontal: 'center',\n//         }}\n//       >\n//         <Typography className={classes.typography}>\n//         { anchorEl ? <div> \n//           <div> { arrOfOrderList && arrOfOrderList.map((item,index) => {\n//           return (\n//           <p className=\"itemInCart\" key={index}>\n//             <h5> {item.name} </h5>\n//             { currencyState === \"usd\" ? \n//               <span>$ {item.priceUSD}</span>  : <span>€ {item.priceEUR} </span> \n//             }\n//             <img style={{ maxWidth: \"50px\", maxHeight: \"50px\"  }} src={item.img} alt=\"img\"/>\n//             <button className={ style.changeItem } onClick={() => decreaseQuantity(item)}>-</button>\n//             <input className={ style.inputValue } type=\"text\" value={item.quantity}/>\n//             <button className={ style.changeItem } onClick={()=> increaseQuantity(item) }>+</button>\n//           </p>\n//           )\n//         }) }\n//          </div>\n//         </div> : \"\" }\n//         { arrOfOrderList.length === 0 ? <p> \"Sorry, your cart is empty\" </p>  : <Link className={style.linkToCart} to=\"/cart\">Go to Cart</Link> }\n//         </Typography>\n//       </Popover>\n//     </div>\n//   );\n// }\n\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, BrowserRouter,\n  useHistory\n} from \"react-router-dom\";\nimport { setUserName, isLogined, existHistory,addHistory } from '../../redux/slices/mainSlices';\nimport styles from './PopoverForUser.module.css';\n\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nexport default function PopoverForUser() {\n  const dispatch = useDispatch();\n  const userNameState = useSelector(state => state.main.userName);\n  const userId = useSelector(state => state.main.userId);\n  const isLoginedState = useSelector(state=> state.main.isLogined);\n  const isExistHistory = useSelector(state => state.main.existHistory);\n\n  function logout() {\n    dispatch(setUserName(\"\"));\n    dispatch(isLogined(false)); \n    dispatch(existHistory(false));\n    dispatch(addHistory([]));\n  }\n\n  function getHistory() {\n    dispatch(existHistory(true))\n  }\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(!anchorEl);\n  };\n\n  const open = (anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div>\n      <Button style={{ marginTop: \"40%\", backgroundColor: \"#edeef1\", fontWeight: \"bold\", fontSize: \"14px\" }}  aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n       {userNameState}\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>\n        { anchorEl ? \n        <ul className={styles.wrapper}>\n          <li><Link className={styles.link} onClick={ getHistory } to=\"/history\">History</Link></li>\n          <li className={styles.link} onClick={logout}>Logout</li>\n        </ul> : \"\" }\n        </Typography>\n      </Popover>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, BrowserRouter\n} from \"react-router-dom\";\nimport Currency from '../Currency/Currency';\nimport style from './Nav.module.css';\nimport Popover from '../Popover/Popover';\nimport PopoverForUser from '../PopoverForUser/PopoverForUser';\n\nexport default function Nav() {\n  const dispatch = useDispatch();\n  const stateOfCart = useSelector(state => state.main.showCartList);\n  const userNameState = useSelector(state => state.main.userName);\n\n  return (\n    <>\n        <ul style={style.ul}>\n         \n            {/* <li style={style.ul}>\n              <Link to=\"/\">Main </Link>\n            </li> */}\n          { userNameState === \"\" ?\n          <>\n          \n            <li style={style.ul}>\n            <Link to=\"/login\">\n                 Sign IN\n            </Link>\n            </li>\n          <Link to=\"/registration\">\n               <li style={style.ul}>Sign UP</li>\n          </Link>\n          </> : <li>\n                  <PopoverForUser/>\n               </li> \n        }\n        </ul>\n        <Currency/>\n        <Popover/>\n    </>\n  )\n}\n","import React from \"react\";\nimport style from './Header.module.css';\nimport Nav from '../Nav/Nav';\n\nexport default function Header() {\n  return (\n    <div>\n       <header style={style.header}>\n        <Nav/>\n      </header>\n    </div>\n  )\n}\n","import React, { useState,useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport style from './Card.module.css';\nimport { addItemToCart, succesOrderDone } from '../../redux/slices/mainSlices';\n\nexport default function Card(props) {\n  const currencyState = useSelector((state => state.main.currency));\n  const dispatch = useDispatch();\n  const {card} = props;\n\n  function addToCart() {\n    dispatch(addItemToCart(card))\n    dispatch(succesOrderDone(false))\n  }\n  \n  return (\n    <div style={{ width: \"25%\", margin: \"10px\", border: \"1px solid #4520ab\",padding: \"5px\" }} >\n      <h3 className={style.title}>{card.name}</h3> \n      <img  src={card.img} alt=\"pizza\"/>\n      <p className={style.description}>{card.description}</p>\n      { currencyState === \"usd\" ? <h4> $ {card.priceUSD}</h4> : <h4> € {card.priceEUR}</h4>  } \n      <button className={ style.buttonOrder } onClick={ addToCart }>Order</button>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/cheese.415c3e32.jpg\";","export default __webpack_public_path__ + \"static/media/bbq.6f22dc2b.jpg\";","export default __webpack_public_path__ + \"static/media/double-pepperoni.daa9311c.jpg\";","export default __webpack_public_path__ + \"static/media/hawaiian.7103b635.jpg\";","export default __webpack_public_path__ + \"static/media/margherita.27b2e7ae.jpeg\";","export default __webpack_public_path__ + \"static/media/meat-fest.cc150f53.jpg\";","export default __webpack_public_path__ + \"static/media/mexican.86bf8ead.jpg\";","export default __webpack_public_path__ + \"static/media/vegan-veggie.0ab265a0.jpeg\";","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, BrowserRouter,\n  useHistory\n} from \"react-router-dom\";\n\nimport Card from '../Card/Card';\nimport style from './Main.module.css';\nimport logoCheese from '../../img/cheese.jpg';\nimport logoBBQ from '../../img/bbq.jpg';\nimport double from '../../img/double-pepperoni.jpg';\nimport hawaiian from '../../img/hawaiian.jpg';\nimport margo from '../../img/margherita.jpeg';\nimport meat_fest from '../../img/meat-fest.jpg';\nimport mexican from '../../img/mexican.jpg';\nimport vegan_veggie from '../../img/vegan-veggie.jpeg';\n\n\n\nexport default function Main() {\n  const stateOfCart = useSelector(state => state.main.showCartList);\n  const isLoginedState = useSelector(state=> state.main.isLogined);\n\n  useEffect(() => {\n    (async() => {\n      if(isLoginedState === false) {\n        const response = await fetch('/logout');\n        const result = await response.json();\n      }\n    })();     \n  },[isLoginedState]);\n\n  const data = [ \n    {\n      name: \"Cheese\",\n      priceUSD: 3.25,\n      priceEUR: 2.72,\n      img: logoCheese,\n      description: \"Cheese, tomato\",\n      id: 1,\n    },\n    {\n      name: \"Barbeque\",\n      priceUSD: 5.00,\n      priceEUR: 4.18,\n      img: logoBBQ,\n      description: \"Cheese, chicken, tomato, papric\",\n      id: 2,\n    },\n    {\n      name: \"Double-pepperoni\",\n      priceUSD: 3.00,\n      priceEUR: 2.51,\n      img: double,\n      description: \"Cheese, chicken, tomato, papric\",\n      id: 3,\n    },\n    {\n      name: \"Hawaiian\",\n      priceUSD: 3.75,\n      priceEUR: 3.13,\n      img: hawaiian,\n      description: \"Cheese, chicken, pine-apple\",\n      id: 4,\n    },\n    {\n      name: \"Margherita\",\n      priceUSD: 3.00,\n      priceEUR: 2.51,\n      img: margo,\n      description: \"Cheese, tomato\",\n      id: 5,\n    },\n    {\n      name: \"Meat-fest\",\n      priceUSD: 3.50,\n      priceEUR: 2.92,\n      img: meat_fest,\n      description: \"Cheese, chicken, meat, tomato, papric\",\n      id: 6,\n    },\n    {\n      name: \"Mexican\",\n      priceUSD: 3.00,\n      priceEUR: 2.51,\n      img: mexican,\n      description: \"Cheese, chicken, papric, onion\",\n      id: 7,\n    },\n    {\n      name: \"Vegan\",\n      priceUSD: 3.00,\n      priceEUR: 2.51,\n      img: vegan_veggie,\n      description: \"Tomato, papric, pine-apple,onion\",\n      id: 8,\n    },\n  ];\n\n  return (\n    <>\n      <main style={style.main}>\n          {data.map((card,index) => {\n            return (\n            <Card key={index} card={card} index={index}/>\n            )\n          })}\n          \n      </main>\n    </>\n  )\n}\n ","import { combineReducers } from '@reduxjs/toolkit';\nimport { mainReducer } from './slices/mainSlices';\n\nexport const rootReducer = combineReducers({\n  main:mainReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './rootReducer';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n\nstore.subscribe(() => {\n  const state = store.getState();\n  window.localStorage.setItem('state', JSON.stringify(state)); \n})\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, \n  useHistory,\n} from \"react-router-dom\";\nimport { isLogined, setUserName,setUserId } from '../../redux/slices/mainSlices';\nimport style from './Registration.module.css';\n\n\nexport default function Registration() {\n  const dispatch = useDispatch();\n  const [inputState, setInputState] = useState({});\n  const history = useHistory();\n\n\n  useEffect(() => {\n    (async() => {\n      const {name, email, password} = inputState;\n      if(inputState !== {}) {\n        const response =  await fetch('/signUp', {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password,\n            id: Math.random(),\n          }),\n        });\n        const result = await response.json(); \n        if(result !== { answer: 'sorry, name has existed yet'}) {\n          dispatch(setUserName(result.name))\n          dispatch(setUserId(result.id))\n          dispatch(isLogined(true))\n          history.push('/');\n        }\n      }\n   })();\n  },[inputState])\n\n  function signUpUser(e) {\n    e.preventDefault();\n    const { name: { value: name } } = e.target;\n    const { email: { value: email } } = e.target;\n    const { password: { value: password } } = e.target;\n    setInputState({name,email,password});\n  }\n\n  return (\n    <>\n      <header>\n        <Link to=\"/\">\n            <p>Go to Main</p>\n        </Link>\n      </header>\n      <div>\n        <h3>Please,sign up </h3>\n        <form autoComplete=\"off\" style={style.form} onSubmit={signUpUser}>\n          <span>Name</span>\n          <input className={style.input} name=\"name\" type=\"text\" placeholder=\"name\" required minlength=\"2\" pattern=\"^[a-zA-Z]+$\"/>\n          <span>Email</span>\n          <input className={style.input} name=\"email\" type=\"email\" placeholder=\"email\" required />\n          <span>Password</span>\n          <input className={style.input} type=\"password\" name=\"password\" placeholder=\"password\" required minlength=\"6\"/>\n          <button className={style.submit}> Submit </button>\n        </form>\n      </div>\n    </>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { succesOrderDone, clearCart } from '../../redux/slices/mainSlices';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function FormDialog() {\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n  const userId = useSelector((state) => state.main.userId);\n  const orderInCart = useSelector((state) => state.main.cart);\n  const succesOrderState = useSelector((state) => state.main.succesOrder);\n  const [inputState, setInputState] = useState({\n    name: \"\",\n    email: \"\",\n    street: \"\",\n    house: \"\",\n    apartment:\"\",\n    comment:\"\"\n  });\n  const { name, email, street,house,apartment,comment } = inputState;\n\n  useEffect(() => {\n    if(succesOrderState === true) {\n      dispatch(clearCart({}))\n    }\n  },[succesOrderState])\n\n  useEffect(() => {\n      (async () => {\n      const response = await fetch('/order', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          street,\n          house,\n          apartment,\n          comment,\n          date : new Date(),\n          user_id: userId,\n          order:  orderInCart\n        }),\n      })\n    })();\n  },[succesOrderState]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (e) => {\n    if(e.target.textContent === \"Submit\") {\n      dispatch(succesOrderDone(true))\n    }\n    setOpen(false);\n  };\n\n  function handleChange({target: {name, value}}) {\n    setInputState({ ...inputState, [name]: value });\n  }\n\n  return (\n    <div>\n      <Button style={{background: \"#4520ab\", color: \"white\", padding:\"10px\", fontWeight: \"bold\", marginBottom: \"10px\", marginRight : \"10px\"}} variant=\"outlined\"  onClick={handleClickOpen}>\n        Checkout\n      </Button>\n      <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Order</DialogTitle>\n        <DialogContent >\n          <TextField\n            required\n            autoFocus\n            margin=\"dense\"\n            name=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n            onChange={handleChange}\n            autoComplete=\"off\"\n          />\n          <TextField\n            required\n            autoFocus\n            autoComplete=\"off\"\n            margin=\"dense\"\n            name=\"email\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            onChange={handleChange}\n          />\n          <TextField\n            autoFocus\n            autoComplete=\"off\"\n            margin=\"dense\"\n            name=\"street\"\n            label=\"Street\"\n            type=\"text\"\n            fullWidth\n            onChange={handleChange}\n          />\n          <TextField\n            autoFocus\n            autoComplete=\"off\"\n            margin=\"dense\"\n            name=\"house\"\n            label=\"House\"\n            type=\"text\"\n            fullWidth\n            onChange={handleChange}\n          />\n          <TextField\n            autoFocus\n            autoComplete=\"off\"\n            margin=\"dense\"\n            name=\"apartment\"\n            label=\"Apartment\"\n            type=\"text\"\n            fullWidth\n            onChange={handleChange}\n          />\n          <TextField\n            autoFocus\n            autoComplete=\"off\"\n            margin=\"dense\"\n            name=\"comment\"\n            label=\"Order comment\"\n            type=\"text\"\n            fullWidth\n            onChange={handleChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport FormDialog from '../Checkout/Checkout';\nimport { addItemToCart, decreaseItemQuantity, setTotalQuantity, setTotalSumOfOrder, removeItemFromCart } from '../../redux/slices/mainSlices';\nimport style from './Cart.module.css';\n\n\nexport default function Cart() {\n  const dispatch = useDispatch();\n  const currencyState = useSelector((state => state.main.currency));\n  const orderList =  useSelector((state => state.main.cart.items));\n  const succesOrder = useSelector((state => state.main.succesOrder));\n  const arrOfOrderList = Object.values(orderList);\n  const totalSum = useSelector((state => state.main.cart.totalSum ));\n  const delivery = useSelector((state => state.main.delivery));\n  const totatWithDelivery =  +totalSum + delivery;\n  const totalQuantity = useSelector(state => state.main.cart.totalQuantity);\n\n  const totalCountOfPizza = arrOfOrderList.reduce((acc, item) => {\n    acc = acc + item.quantity;\n    return  acc;\n  },0)\n\n  useEffect(() => {\n    const totalSum = arrOfOrderList.reduce((acc, item) => {\n      if(currencyState === \"usd\") {\n        acc = acc + (item.quantity * item.priceUSD);\n      } else {\n        acc = acc + (item.quantity * item.priceEUR);\n      }\n      return  acc;\n    },0);\n    // setTotalSum(totalSum.toFixed(1));\n    dispatch(setTotalQuantity(totalCountOfPizza));\n    dispatch(setTotalSumOfOrder(totalSum.toFixed(2)))\n  },[totalCountOfPizza,currencyState]);\n\n\n   function removeFromCart(item) {\n     dispatch(removeItemFromCart(item))\n   }\n\n  function increaseQuantity(item) {\n    dispatch(addItemToCart(item))\n  }\n\n  function decreaseQuantity(item) {\n    if(item.quantity !== 0 ) {\n      dispatch(decreaseItemQuantity(item))\n    }\n  }\n\n  return (\n    <>\n    <header>\n      <p>\n        <Link to=\"/\">\n            Return to Main page\n        </Link>\n      </p>\n    </header>\n    <div className={style.wrapper}>\n      <h3>Your Cart</h3>\n      {\n        succesOrder === false? \n          arrOfOrderList && arrOfOrderList.map((item,index) => {\n            return (\n                <div  className={style.itemInCart} key={index}>\n                  <h5> {item.name} </h5>\n                  { currencyState === \"usd\" ? \n                    <p>Price: $ {item.priceUSD}</p> : <p>Price: € {item.priceEUR} </p> \n                  }\n                  <p>\n                    <img style={{ maxWidth: \"75px\", maxHeight: \"75px\"  }} src={item.img} alt=\"img\"/>\n                  </p>\n                  <div>\n                    <button className={style.changeItem} onClick={() => decreaseQuantity(item)} > - </button>\n                    <input className={style.inputValue} type=\"text\" value={item.quantity}/>\n                    <button className={style.changeItem} onClick={()=> increaseQuantity(item)} > + </button>\n                  </div>\n                  <button className={style.delete} onClick={() => removeFromCart(item)}>Delete</button>\n                </div>\n                )\n              })\n         : <p>\n          <h2>\"Cart empty, but our shop no, choice something delicious\"</h2> \n          </p>\n\n      } \n       {\n         arrOfOrderList.length === 0 ? \"\" : \n          <p>\n            <h2> Subtotal : { totalSum } </h2>\n            <p>Delivery: { currencyState === \"usd\" ?  <span>$</span> : <span>€</span>  } {delivery}</p>\n            <h2> Total: { currencyState === \"usd\" ?  <span>$</span> : <span>€</span> } { totatWithDelivery.toFixed(2) }</h2>\n       </p>\n       }      \n    </div>\n    <div className={ style.wrapper }>\n       {totalQuantity === 0? \n        <button className={style.choosePizza}>\n            <Link to=\"/\">\n              CHOOSE PIZZA\n            </Link>\n      </button> : \n      <div>\n        <FormDialog/> \n        <button className={style.choosePizza}>\n            <Link to=\"/\">\n              CHOOSE PIZZA\n            </Link>\n      </button>\n      </div>\n      }  \n    </div>\n    </>\n  )\n}\n\n","import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addHistory } from '../../redux/slices/mainSlices';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, BrowserRouter\n} from \"react-router-dom\";\nimport Header from '../Header/Header';\nimport style from './History.module.css';\n\nexport default function History() {\n  const dispatch = useDispatch();\n  const userId = useSelector(state => state.main.userId);\n  const isExistHistory = useSelector(state => state.main.existHistory);\n  const historyListOfOrder = useSelector((state) => state.main.history);\n  const succesOrderState = useSelector((state) => state.main.succesOrder);\n\n  \n  useEffect(() => {\n    if(isExistHistory === true) {\n      (async() => {\n        const response = await fetch('/history', {\n          method: \"POST\", \n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            user_id: userId,\n          }),\n        });\n        const result = await response.json();\n        dispatch(addHistory(result.order));\n      })();\n    }\n  },[])\n\n  return (\n    <div className={style.wrapper}>\n      <Header/>\n      <h1>History of orders</h1>\n      <div>\n       {\n         historyListOfOrder &&\n          historyListOfOrder.map((item,index) => {\n            return (\n              <>\n              <hr/>\n              <div  key={index}>\n                {item.order[0] && Object.keys(item.order[0].items).map((el,i)=> {\n                  return (\n                  <span className={style.each} key={i}>{i+1}. \"{ item.order[0].items[el].name }\", </span>\n                  )\n                }) }\n              </div>\n              <p style={{marginTop: \"5px\"}}>Total sum: {item.order[0].totalSum}</p>\n              <p>Street: {item.street}</p>\n              <p>House: {item.house}</p>\n              <p>Apartment : {item.apartment}</p>\n              <p>Date of order : {item.date}</p>\n              </>\n            )\n          })\n          }\n      </div>\n      <div>\n        \n      </div>\n      <div>\n          <button className={style.choosePizza}>\n            <Link  to=\"/\">Main</Link>\n          </button>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, BrowserRouter\n} from \"react-router-dom\";\nimport Login from './components/Login/Login';\nimport './App.css';\nimport Header  from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main.jsx\";\nimport { store } from './redux/store';\nimport Registration from './components/Registration/Registration';\nimport Cart from './components/Cart/Cart';\nimport History from './components/History/History';\n\n\nfunction App() {\n    return (\n  <Provider store={store}>\n          <div className=\"App\">\n           <Switch>\n              <Route exact path=\"/\">\n                <Header/>\n                <Main/>\n              </Route>\n              <Route exact path=\"/login\">\n                <Login/>\n              </Route>\n              <Route exact path=\"/registration\">\n                <Registration/>\n              </Route>\n              <Route exact path=\"/cart\">\n                <Cart/>\n              </Route>\n              <Route exact path=\"/history\">\n                <History/>\n              </Route>\n           </Switch>\n          </div>\n        </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n     <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}